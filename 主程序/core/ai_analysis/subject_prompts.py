"""
学科提示词模块 - 为不同学科提供分析模板
"""
import logging

logger = logging.getLogger(__name__)

# 数学学科分析模板
MATH_PROMPT = """
分析这张数学错题图片，请提供以下结构化信息：
1. 题目原文：完整提取图片中的数学题目内容
2. 题目类型：确定这是考研数学中的哪个大类（高等数学/线性代数/概率论与数理统计）
3. 具体分支：在该大类下的具体分支（如极限/积分/矩阵/特征值等）
4. 错误类型：属于哪种常见错误（计算错误/概念理解错误/公式应用错误/推理逻辑错误等）
5. 错误分析：详细分析错误的原因和产生的环节
6. 正确解法：给出完整的正确解题思路和步骤
7. 难度评估：1-5分，1最简单，5最困难
8. 知识点标签：提取3-5个与此题相关的核心知识点，作为标签
"""

# 物理学科分析模板
PHYSICS_PROMPT = """
分析这张物理错题图片，请提供以下结构化信息：
1. 题目原文：完整提取图片中的物理题目内容
2. 题目类型：确定这是物理学中的哪个大类（力学/电磁学/热学/光学/现代物理）
3. 具体分支：在该大类下的具体分支（如牛顿力学/静电场/热力学第一定律等）
4. 错误类型：属于哪种常见错误（物理概念错误/公式使用错误/计算错误/单位错误等）
5. 错误分析：详细分析错误的原因和产生的环节
6. 正确解法：给出完整的正确解题思路和步骤
7. 难度评估：1-5分，1最简单，5最困难
8. 知识点标签：提取3-5个与此题相关的核心知识点，作为标签
"""

# 化学学科分析模板
CHEMISTRY_PROMPT = """
分析这张化学错题图片，请提供以下结构化信息：
1. 题目原文：完整提取图片中的化学题目内容
2. 题目类型：确定这是化学中的哪个大类（无机化学/有机化学/物理化学/分析化学）
3. 具体分支：在该大类下的具体分支（如化学平衡/电化学/有机反应/元素化合物等）
4. 错误类型：属于哪种常见错误（化学概念错误/反应条件错误/计算错误/平衡错误等）
5. 错误分析：详细分析错误的原因和产生的环节
6. 正确解法：给出完整的正确解题思路和步骤
7. 难度评估：1-5分，1最简单，5最困难
8. 知识点标签：提取3-5个与此题相关的核心知识点，作为标签
"""

# 英语学科分析模板
ENGLISH_PROMPT = """
分析这张英语错题图片，请提供以下结构化信息：
1. 题目原文：完整提取图片中的英语题目内容
2. 题目类型：确定这是英语中的哪个大类（阅读理解/语法/写作/翻译/词汇等）
3. 具体分支：在该大类下的具体分支（如时态/从句/词义辨析/段落理解等）
4. 错误类型：属于哪种常见错误（语法错误/词汇使用错误/理解错误/逻辑错误等）
5. 错误分析：详细分析错误的原因和产生的环节
6. 正确解法：给出完整的正确解题思路和步骤
7. 难度评估：1-5分，1最简单，5最困难
8. 知识点标签：提取3-5个与此题相关的核心知识点，作为标签
"""

# 政治学科分析模板
POLITICS_PROMPT = """
分析这张政治错题图片，请提供以下结构化信息：
1. 题目原文：完整提取图片中的政治题目内容
2. 题目类型：确定这是政治中的哪个大类（马原/毛中特/史纲/思修法基）
3. 具体分支：在该大类下的具体分支（如唯物辩证法/社会主义经济/中国近代史等）
4. 错误类型：属于哪种常见错误（概念理解错误/观点错误/事实记忆错误/逻辑错误等）
5. 错误分析：详细分析错误的原因和产生的环节
6. 正确解法：给出完整的正确解题思路和解析
7. 难度评估：1-5分，1最简单，5最困难
8. 知识点标签：提取3-5个与此题相关的核心知识点，作为标签
"""

# 学科到提示词的映射
SUBJECT_PROMPTS = {
    'math': MATH_PROMPT,
    'physics': PHYSICS_PROMPT,
    'chemistry': CHEMISTRY_PROMPT,
    'english': ENGLISH_PROMPT,
    'politics': POLITICS_PROMPT
}

def get_prompt_for_subject(subject='math', user_notes=''):
    """
    获取指定学科的分析提示词模板
    
    Args:
        subject: 学科标识符，默认为math
        user_notes: 用户补充说明
        
    Returns:
        str: 完整的提示词
    """
    # 获取学科对应的提示词，如果不存在则使用数学提示词
    base_prompt = SUBJECT_PROMPTS.get(subject, MATH_PROMPT)
    
    # 添加用户补充信息 - 增强优先级
    if user_notes:
        prompt = f"""
        【用户特别说明】: {user_notes}
        
        请优先根据上述用户说明分析问题。如果用户指出了特定问题，请直接针对用户的问题进行分析，这比遵循以下分析框架更重要。
        
        {base_prompt}
        """
        return prompt
    else:
        return base_prompt
